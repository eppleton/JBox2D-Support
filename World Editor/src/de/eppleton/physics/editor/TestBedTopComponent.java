/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.eppleton.physics.editor;

import java.awt.BorderLayout;
import java.awt.Component;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import javax.swing.JScrollPane;
import org.jbox2d.testbed.framework.TestList;
import org.jbox2d.testbed.framework.TestbedController;
import org.jbox2d.testbed.framework.TestbedModel;
import org.jbox2d.testbed.framework.j2d.TestPanelJ2D;
import org.jbox2d.testbed.framework.j2d.TestbedSidePanel;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//de.eppleton.physics.editor//TestBed//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "TestBedTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "de.eppleton.physics.editor.TestBedTopComponent")
@ActionReference(path = "Menu/Window/JBox2D" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_TestBedAction",
preferredID = "TestBedTopComponent")
@Messages({
    "CTL_TestBedAction=TestBed",
    "CTL_TestBedTopComponent=TestBed Window",
    "HINT_TestBedTopComponent=This is a TestBed window"
})
public final class TestBedTopComponent extends TopComponent {

    private TestbedSidePanel side;
    private TestbedModel model;
    private TestbedController controller;

    public TestBedTopComponent() {
        //initComponents();
        setName(Bundle.CTL_TestBedTopComponent());
        setToolTipText(Bundle.HINT_TestBedTopComponent());
        setLayout(new BorderLayout());
        model = new TestbedModel();
        TestPanelJ2D panel = new TestPanelJ2D(model);
        TestList.populateModel(model);

        model.setDebugDraw(panel.getDebugDraw());
        controller = new TestbedController(model, panel);
        side = new TestbedSidePanel(model, controller);

        add((Component) panel, "Center");
        add(new JScrollPane(side), "East");
        controller.playTest(0);
        controller.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
